1
00:00:07,230 --> 00:00:12,510
For this course, we'll be using Zamp, but I want you to be aware there are other environments such

2
00:00:12,510 --> 00:00:17,550
as Mantha and Wempe I don't like to use either because Wamp doesn't come with the latest version of

3
00:00:17,860 --> 00:00:20,290
PHP and MAP isn't completely free.

4
00:00:20,820 --> 00:00:25,080
I find Zamp easier to use and provides everything you need free of charge.

5
00:00:25,350 --> 00:00:28,860
However, WordPress will work on any of these without a problem.

6
00:00:29,250 --> 00:00:34,920
With that being said, I really recommend you use Zamp along with me so you don't run into any problems

7
00:00:34,920 --> 00:00:36,010
with other platforms.

8
00:00:36,450 --> 00:00:40,230
There is one additional option which is specifically made for WordPress.

9
00:00:40,530 --> 00:00:46,270
In the resource section of this lecture, I provide a link to an environment called Local by Flywheel.

10
00:00:46,710 --> 00:00:49,860
This environment is specifically for WordPress sites.

11
00:00:50,130 --> 00:00:53,520
It provides a lot of tools for helping you with WordPress development.

12
00:00:54,060 --> 00:00:58,310
Currently, it is completely free, but there are plans to make a premium version.

13
00:00:58,740 --> 00:01:05,069
There is something I do recommend you check out because it allows you to pick your miscible and WordPress

14
00:01:05,069 --> 00:01:06,000
versions on the fly.

15
00:01:06,450 --> 00:01:10,970
However, we won't be using it because it's a bit complex for our needs right now.

16
00:01:11,370 --> 00:01:15,040
Later in this course, we'll actually explore how to use this program.

17
00:01:15,600 --> 00:01:17,750
Let's talk about text editors now.

18
00:01:18,090 --> 00:01:22,360
There are dozens of them out there, but the one I prefer is Visual Studio Code.

19
00:01:22,650 --> 00:01:25,140
It's free and supports WordPress quite well.

20
00:01:25,380 --> 00:01:27,780
It provides a lot of tools for debugging.

21
00:01:28,140 --> 00:01:31,750
You're free to use any editor you like as long as you're comfortable with it.

22
00:01:32,130 --> 00:01:37,740
I've had some students use Dreamweaver, which is fine, but you should be aware that Dreamweaver comes

23
00:01:37,740 --> 00:01:38,680
with its own server.

24
00:01:39,090 --> 00:01:43,530
Some students have had some difficulty setting up Dreamweaver server with WordPress.

25
00:01:43,830 --> 00:01:47,550
For that reason, I don't recommend using Dreamweaver server.

26
00:01:47,970 --> 00:01:53,940
You can still use Dreamweaver, but you should probably stick to Zamp as a development environment since

27
00:01:53,940 --> 00:01:56,070
all be using Visual Studio code.

28
00:01:56,190 --> 00:01:59,910
I want to show you some features that I'll be using that you should be aware of.

29
00:02:00,270 --> 00:02:03,860
You're not required to have these features, but I use them frequently.

30
00:02:04,200 --> 00:02:07,290
These features just make it easier to read and write code.

31
00:02:07,740 --> 00:02:13,190
Visual Studio Code does not add any features to WordPress or generate code that you can't generate.

32
00:02:13,500 --> 00:02:15,810
You'll be fine with any editor.

33
00:02:16,410 --> 00:02:18,030
I'm going to start up my editor.

34
00:02:18,180 --> 00:02:19,950
I will open up a random file.

35
00:02:20,190 --> 00:02:22,200
You do not need to do this yourself.

36
00:02:22,200 --> 00:02:23,330
Just watch what I'm doing.

37
00:02:23,880 --> 00:02:28,140
One of the features Visual Studio Code comes with is called Code Folding.

38
00:02:28,530 --> 00:02:31,890
Code folding allows you to minimize certain sections of code.

39
00:02:32,280 --> 00:02:37,920
This makes it easier to read and scroll up and down your code without having to temporarily delete or

40
00:02:37,920 --> 00:02:38,640
remove anything.

41
00:02:39,270 --> 00:02:40,860
Let's look at how this works.

42
00:02:41,010 --> 00:02:45,600
Code folding can only be applied to code that is nested inside a block.

43
00:02:46,020 --> 00:02:48,420
This conditional statement has nested code.

44
00:02:48,720 --> 00:02:54,240
If I want to minimize this, then I would click on this minus button that is on the left by clicking

45
00:02:54,240 --> 00:02:54,870
this button.

46
00:02:54,870 --> 00:02:57,090
All code inside will be folded.

47
00:02:57,750 --> 00:03:00,840
Visual studio code does not delete or move anything.

48
00:03:00,990 --> 00:03:03,030
It simply minimizes the code.

49
00:03:03,030 --> 00:03:07,110
Inside this block of code, there are two things you'll also notice.

50
00:03:07,320 --> 00:03:09,990
On the left I have my line numbers appearing.

51
00:03:10,260 --> 00:03:15,840
You'll see that Visual Studio Code accounts for this and we'll skip the line numbers inside the block

52
00:03:15,840 --> 00:03:16,200
comit.

53
00:03:16,830 --> 00:03:20,700
Another thing it'll do is create this black square on the same line.

54
00:03:21,060 --> 00:03:23,850
This indicates that there is more code that's being hidden.

55
00:03:24,180 --> 00:03:28,980
If I wanted to view the code inside, I would simply click on the button on the left again.

56
00:03:29,400 --> 00:03:34,050
I'm using this feature frequently to make it easier to read the code in larger files.

57
00:03:34,530 --> 00:03:38,310
Another feature that comes with Visual Studio Code is Code Hinting.

58
00:03:38,550 --> 00:03:43,440
Code Hinting is not a feature exclusive to Visual Studio Code Code hinting.

59
00:03:43,440 --> 00:03:48,000
We'll suggest code that you intend to write and will help you complete it for faster development.

60
00:03:48,600 --> 00:03:55,440
For example, if I were to begin writing the function include, then my editor will suggest the function

61
00:03:55,440 --> 00:03:59,910
before I even finish writing it and will allow me to select it and autocomplete it for me.

62
00:04:00,390 --> 00:04:03,570
This is a really great feature that is common among text editors.

63
00:04:04,110 --> 00:04:08,670
I'm going to remove this code as I don't want these changes applied to my files.

64
00:04:09,030 --> 00:04:12,540
The last feature that I want to show you is the file search feature.

65
00:04:12,900 --> 00:04:15,420
There are a ton of files that come with WordPress.

66
00:04:15,600 --> 00:04:17,190
Searching for code can be tricky.

67
00:04:17,790 --> 00:04:23,370
Luckily, Visual Studio Code allows you to search for code without having to know where to begin.

68
00:04:23,820 --> 00:04:30,300
Let's say I wanted to know where the WP underscored DII function was defined on the left.

69
00:04:30,300 --> 00:04:32,490
I'm going to click on the search icon.

70
00:04:32,820 --> 00:04:35,550
This will open the search feature in Visual Studio.

71
00:04:36,030 --> 00:04:38,430
Now I can search for anything I want.

72
00:04:38,640 --> 00:04:41,130
I'm going to search for the following function.

73
00:04:41,130 --> 00:04:48,630
WP Underscore DOT Immediately, Visual Studio Code will return a list of results that match the text.

74
00:04:48,630 --> 00:04:49,320
I input it.

75
00:04:49,740 --> 00:04:55,080
It'll show the line where the text is used along with the name of the file and the line number.

76
00:04:55,620 --> 00:04:57,780
I'm going to double click on the first result.

77
00:04:58,080 --> 00:05:03,960
The file selected will then be opened inside the main editor window and I'll be taken to the line where

78
00:05:03,960 --> 00:05:05,490
that piece of text was found.

79
00:05:06,000 --> 00:05:06,510
This is a.

80
00:05:06,540 --> 00:05:12,030
Really great feature that can make it easy to find code that you have no idea where it is throughout

81
00:05:12,030 --> 00:05:16,430
this course, I rarely use this feature, but I just wanted you to be aware of it.

82
00:05:17,070 --> 00:05:20,070
It's not required that you have visual studio code.

83
00:05:20,370 --> 00:05:27,460
As I said, any editor will do a lot of these features, just make it faster and easier to read code.

84
00:05:27,810 --> 00:05:32,910
I just wanted to show you these features so that you can understand why my code looks the way it does.

85
00:05:33,420 --> 00:05:33,870
All right.

86
00:05:34,020 --> 00:05:34,840
That's it for now.

87
00:05:35,010 --> 00:05:36,690
I'll see you in the next lecture.

