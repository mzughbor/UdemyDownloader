1
00:00:07,440 --> 00:00:13,470
In this lecture, we'll explore how to create templates for attachments, the template hierarchy goes

2
00:00:13,470 --> 00:00:15,970
through quite a bit of templates to display attachments.

3
00:00:16,260 --> 00:00:20,910
You can actually get really specific here by creating templates for certain mime types.

4
00:00:21,420 --> 00:00:24,030
First, let's understand what a mind type is.

5
00:00:24,300 --> 00:00:30,210
A mind type is a way for a program or browser to identify what kind of file is being loaded.

6
00:00:30,660 --> 00:00:36,360
It's similar to a file extension except mind types or stored internally into the file itself.

7
00:00:37,050 --> 00:00:40,500
This makes it a bit harder to change as opposed to file extensions.

8
00:00:40,650 --> 00:00:45,570
Checking a mind type is safer than checking for an extension, but it isn't foolproof.

9
00:00:46,200 --> 00:00:51,090
Now that we understand mine types, let's explore the template order WordPress will use.

10
00:00:51,360 --> 00:00:56,450
First, it'll check for the mime type of the file and then search for a template with the same name.

11
00:00:56,940 --> 00:01:00,900
If it doesn't find one, then it'll fall back to the attachment template.

12
00:01:01,590 --> 00:01:05,080
This is followed by the single attachment that uses the slug.

13
00:01:05,550 --> 00:01:10,400
Lastly, the single singular and indexed templates are used in that order.

14
00:01:11,930 --> 00:01:17,840
Anyway, let's get started with creating attachment templates, go to your admin dashboard and look

15
00:01:17,840 --> 00:01:18,770
for the menu item.

16
00:01:18,770 --> 00:01:25,850
Media WordPress will allow you to manage all your uploads through here, all file uploads or what WordPress

17
00:01:25,850 --> 00:01:27,080
considers attachments.

18
00:01:27,380 --> 00:01:32,150
If you use Fakher Press, then you should see quite a few attachments being displayed here.

19
00:01:32,360 --> 00:01:35,290
Veigar press generated these for us, which is nice.

20
00:01:35,780 --> 00:01:41,030
I'm going to click on one of the images and you will see this modal pop up providing more details about

21
00:01:41,030 --> 00:01:41,710
the attachment.

22
00:01:42,170 --> 00:01:44,290
There are two ways to view this image.

23
00:01:44,540 --> 00:01:49,850
You can either use this URL here or you can click on this link that says you attachment page.

24
00:01:50,480 --> 00:01:52,070
Let's view the attachment page.

25
00:01:52,220 --> 00:01:57,800
As you can see, we have the image appearing here and we have the rest of the page being displayed.

26
00:01:58,460 --> 00:02:04,850
By default, WordPress will use the single or indexed templates if an attachment template isn't present.

27
00:02:05,600 --> 00:02:08,180
While I do like that, my theme is being displayed.

28
00:02:08,330 --> 00:02:11,180
There's way too much information here just for the image.

29
00:02:11,450 --> 00:02:15,890
So let's create the attachment template now for this template.

30
00:02:15,890 --> 00:02:19,940
I'm going to copy all the code from the single template into this new template.

31
00:02:22,030 --> 00:02:28,780
Then I'm going to remove the metadata featured image pagination links next and previous links, tags,

32
00:02:28,780 --> 00:02:30,760
related posts and author box.

33
00:02:48,510 --> 00:02:54,720
What you'll end up having is the title content and the comments not really spectacular, but this is

34
00:02:54,720 --> 00:02:58,140
just an attachment template, so the details don't matter as much.

35
00:02:58,500 --> 00:03:00,600
Let's refresh the page and see what we get.

36
00:03:01,350 --> 00:03:04,190
The image will disappear and nothing really displays.

37
00:03:04,200 --> 00:03:05,370
But why is this?

38
00:03:05,760 --> 00:03:12,300
What's happening is that WordPress now assumes you want to display attachments your own way by creating

39
00:03:12,300 --> 00:03:13,910
the attachments template.

40
00:03:14,040 --> 00:03:17,580
You're also given control over how an attachment should be displayed.

41
00:03:17,940 --> 00:03:19,730
WordPress will not do it for you.

42
00:03:20,460 --> 00:03:22,740
So how do we get the attachment info?

43
00:03:23,100 --> 00:03:28,110
Well, there's a special variable that's created that contains all this info back inside.

44
00:03:28,110 --> 00:03:31,410
The template I'm going to print are the post variable.

45
00:03:31,830 --> 00:03:34,740
I'm also going to surround this with pre-tax.

46
00:03:40,300 --> 00:03:45,880
By calling the function, the post, this variable is automatically created for you and you can use

47
00:03:45,880 --> 00:03:51,630
it anywhere in your loop in future, lectures will go over how to use this variable to our advantage.

48
00:03:51,640 --> 00:03:53,980
But for now, we'll just look at what's inside.

49
00:03:54,760 --> 00:03:56,590
Go back to the page and refresh.

50
00:03:56,800 --> 00:03:59,650
You should see the data about the post being printed out.

51
00:04:00,100 --> 00:04:04,670
There's a lot of information being outputted here, but we only care about three properties.

52
00:04:04,960 --> 00:04:07,870
The first property you'll notice is the post type.

53
00:04:08,230 --> 00:04:14,110
It's set to attachment, which WordPress uses to determine if the attachment template should be used.

54
00:04:14,740 --> 00:04:21,440
There's also the mind type being set will actually use these later to create more specific templates.

55
00:04:21,850 --> 00:04:23,320
I'll talk more about that later.

56
00:04:23,680 --> 00:04:27,160
The last property that's important is the Giulietti property.

57
00:04:27,430 --> 00:04:30,570
This will contain the direct link to the attachment itself.

58
00:04:31,420 --> 00:04:34,030
Now that we know where to find this information, let's use it.

59
00:04:34,420 --> 00:04:38,770
I'm going to remove the print statement and then write above the content.

60
00:04:38,860 --> 00:04:40,930
I'm going to create an anchor link.

61
00:04:43,580 --> 00:04:47,390
The text will be direct download and the link will be dynamic using.

62
00:04:48,530 --> 00:04:53,030
I'm going to access the GeoEye property from the post object like so.

63
00:04:55,250 --> 00:05:00,650
If everything worked, then we should be able to refresh the page and see the direct download link appearing,

64
00:05:01,130 --> 00:05:06,530
something I want to highlight is that if you don't see a title, then chances are the attachment itself

65
00:05:06,530 --> 00:05:07,610
doesn't have a title.

66
00:05:08,030 --> 00:05:13,400
If you go back to the media manager, you should see this field where you can set a title set one so

67
00:05:13,400 --> 00:05:15,290
that you don't see a lot of empty space.

68
00:05:17,480 --> 00:05:23,210
All right, this is great, I want to take this a step further, but I want to do is display that image

69
00:05:23,210 --> 00:05:24,770
right below the download link.

70
00:05:24,770 --> 00:05:26,660
But there's one problem we face.

71
00:05:27,020 --> 00:05:30,160
This attachment template will be loaded for any attachment.

72
00:05:30,530 --> 00:05:36,190
This includes videos, applications, PDF files and any other files that aren't images.

73
00:05:36,830 --> 00:05:41,750
Luckily, we can get around this by creating a template for a specific mind type.

74
00:05:42,110 --> 00:05:47,390
In the resource section of this lecture, I provide a link to the function get allow admin types.

75
00:05:47,660 --> 00:05:49,730
We aren't going to use this function.

76
00:05:49,730 --> 00:05:52,760
But what I want you to look at is this list of mind types.

77
00:05:53,270 --> 00:05:57,620
On the left you have the extension and on the right you have the mind type itself.

78
00:05:58,010 --> 00:06:01,300
You'll see that mind types or formatted in a certain way.

79
00:06:01,730 --> 00:06:04,420
There's the category and then the type of file itself.

80
00:06:04,700 --> 00:06:10,160
For example, there's the image, video, text, audio and other categories.

81
00:06:10,470 --> 00:06:17,120
If we look at the image category, you'll see all the various types of files that fall under this category,

82
00:06:17,150 --> 00:06:21,070
which are JPEG, gif and so on and so forth.

83
00:06:21,710 --> 00:06:23,600
Let's create a template for this.

84
00:06:23,930 --> 00:06:27,200
All you have to do is name your template after the mime type.

85
00:06:27,440 --> 00:06:31,000
In this case, we should name the file image BHP.

86
00:06:33,460 --> 00:06:39,550
Now, any attachments with this mind type will be loaded using this template, I'm going to copy over

87
00:06:39,550 --> 00:06:42,410
the code from the attachment template into this template.

88
00:06:43,210 --> 00:06:48,700
The only change I'm going to make is add an IMG tag right below the direct download link.

89
00:06:49,060 --> 00:06:55,180
Since we know that the URL to the image itself is saved inside the Guity property, I'm just going to

90
00:06:55,180 --> 00:06:56,020
pass that in here.

91
00:06:58,230 --> 00:07:04,530
I'm also going to give this image a class of image, Dasch responsive so that the image doesn't wander

92
00:07:04,530 --> 00:07:05,220
off the page.

93
00:07:07,680 --> 00:07:13,320
Refresh the page and you should now see the image you're hearing this is great because we now have two

94
00:07:13,320 --> 00:07:14,430
attachment templates.

95
00:07:14,760 --> 00:07:21,120
One template is for images that will display the image to the user and another is for any generic attachment.

96
00:07:21,870 --> 00:07:27,300
You can obviously take this even further by adding a video player for videos or a PDF viewer.

97
00:07:27,600 --> 00:07:29,250
The solutions are limitless.

98
00:07:30,810 --> 00:07:31,360
Oh.

