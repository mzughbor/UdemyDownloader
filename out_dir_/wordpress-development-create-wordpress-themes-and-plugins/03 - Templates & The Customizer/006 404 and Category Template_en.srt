1
00:00:07,480 --> 00:00:13,240
The four or four template is actually pretty simple, according to WordPress, this file must be named

2
00:00:13,240 --> 00:00:18,340
for or for WordPress, doesn't have any recommendations for this page.

3
00:00:18,340 --> 00:00:20,080
So we're going to keep it really simple.

4
00:00:22,400 --> 00:00:29,120
Create a file named for for pop up and let's copy the code from the page template into this template.

5
00:00:31,440 --> 00:00:34,590
I'm going to get rid of everything except the header and footer.

6
00:00:36,970 --> 00:00:43,930
Then I'm going to open the forum for HTML static template, copy everything from the page title to the

7
00:00:43,930 --> 00:00:46,690
content into the WordPress template like so.

8
00:00:53,260 --> 00:00:59,470
I'm going to make the most of this tech translatable using the underscore e function, remember to set

9
00:00:59,470 --> 00:01:00,640
the text domain.

10
00:01:12,510 --> 00:01:17,430
We have this search form that we can easily replaced with the get search form function.

11
00:01:19,680 --> 00:01:24,280
This function will search for a file called Search Form and load it.

12
00:01:24,810 --> 00:01:29,290
We already created this template in a previous lecture, so we're just reusing it here.

13
00:01:29,880 --> 00:01:33,420
Go to your site and try visiting a completely random URL.

14
00:01:33,930 --> 00:01:36,150
You should see something similar to what I see.

15
00:01:36,840 --> 00:01:39,180
I've said it a hundred times and I'll say it again.

16
00:01:39,510 --> 00:01:42,950
WordPress takes care of handling which templates to display.

17
00:01:43,440 --> 00:01:47,310
All we have to do is follow the naming conventions and create the templates.

18
00:01:47,700 --> 00:01:52,710
WordPress will make all queries and run any functions necessary to display a page.

19
00:01:55,100 --> 00:02:01,330
Now that we finished the 404 template, let's begin working on the category template, here is the load

20
00:02:01,340 --> 00:02:03,110
order for the category template.

21
00:02:03,560 --> 00:02:09,650
WordPress will search for a template named category, followed by the slug named afterwards.

22
00:02:09,800 --> 00:02:14,900
It'll search for the templated named category, followed by the ID of the category.

23
00:02:15,710 --> 00:02:19,550
Next, it'll search for the category and archive templates.

24
00:02:19,550 --> 00:02:24,470
In that order, the category template is specifically for category pages.

25
00:02:24,830 --> 00:02:29,170
The archive template is used to display posts in chronological order.

26
00:02:29,600 --> 00:02:36,170
Unlike the category template, the archive template is used for various pieces of pages like tags,

27
00:02:36,170 --> 00:02:37,340
dates, etc..

28
00:02:39,690 --> 00:02:45,570
Let's get started with creating the template, it's basically going to be a copy of the index template,

29
00:02:45,930 --> 00:02:48,900
WordPress says we have to name this file category.

30
00:02:50,310 --> 00:02:56,640
So let's create that file and then copy everything from the index template into the category template.

31
00:02:59,050 --> 00:03:04,420
If we take a look at the static version of the category template, there's only two differences between

32
00:03:04,420 --> 00:03:09,000
the category template and the index template, and that is this strip with the title.

33
00:03:09,460 --> 00:03:11,520
There's also no breaking news widget.

34
00:03:11,710 --> 00:03:13,800
So we have to remove that as well.

35
00:03:16,270 --> 00:03:18,740
First, let's tackle this title at the top.

36
00:03:19,210 --> 00:03:26,400
Go back to the editor and open the category HTML file from the static HTML category template.

37
00:03:26,440 --> 00:03:30,370
We can just copy and paste the page title section like so.

38
00:03:33,420 --> 00:03:36,540
We replace the text with the function, the archive title.

39
00:03:40,270 --> 00:03:46,030
This template tag, it's a special kind of template tag that doesn't need to be used inside a loop and

40
00:03:46,030 --> 00:03:49,870
said this tag will check the main query and grab the archive title.

41
00:03:50,320 --> 00:03:55,870
WordPress considers this template an archive template and archive is exactly what it sounds like.

42
00:03:55,990 --> 00:03:57,400
It is a list of posts.

43
00:03:57,760 --> 00:04:03,400
The category template is a special kind of archive template because it'll display a list of posts based

44
00:04:03,400 --> 00:04:04,180
on a category.

45
00:04:04,930 --> 00:04:10,150
You can find more information about the archive title function at the developer documentation.

46
00:04:10,600 --> 00:04:14,560
I'll provide a link to this in the resource section for the description.

47
00:04:14,710 --> 00:04:19,930
We can use the archive description function, which will output the description if there is one.

48
00:04:22,270 --> 00:04:24,880
Lastly, let's remove the breaking news, which it.

49
00:04:29,620 --> 00:04:33,110
If we refresh the page, you'll notice that the title is updated.

50
00:04:33,460 --> 00:04:35,780
That's pretty much all the rest of this template.

51
00:04:36,160 --> 00:04:41,140
Something special about Catagories is that you can get even more specific with your designs.

52
00:04:41,500 --> 00:04:43,920
Let's take a look at the template hierarchy again.

53
00:04:44,260 --> 00:04:48,580
There's this section that describe which templates have precedence over others.

54
00:04:48,940 --> 00:04:52,480
Right now we're using the category template.

55
00:04:52,780 --> 00:04:57,820
If this template didn't exist, then WordPress would load the Arcega HP template.

56
00:04:58,090 --> 00:05:03,040
If that template didn't exist, then the index template would be the default.

57
00:05:03,730 --> 00:05:10,120
Right above these three or more specific dynamic templates, you can create a template for a specific

58
00:05:10,120 --> 00:05:12,760
idea or look, let's explore how to do that.

59
00:05:13,560 --> 00:05:18,730
I'm going to go to the categories in my admin dashboard and view a particular category.

60
00:05:20,920 --> 00:05:26,740
If you look at the URL bar, you should see something along the lines of tag underscore ID followed

61
00:05:26,740 --> 00:05:28,270
by the ID of the category.

62
00:05:28,870 --> 00:05:35,560
Let's generate a template for this category as instructed by the template hierarchy in order to create

63
00:05:35,560 --> 00:05:39,460
a template for a specific category we can use to slug or ID.

64
00:05:39,910 --> 00:05:41,620
The slug is prioritized.

65
00:05:41,620 --> 00:05:48,400
First, though, I'm going to create a file named Category Dasch, followed by the idea of the category,

66
00:05:48,520 --> 00:05:54,880
and then B then I'm going to copy everything from the category template into this template.

67
00:05:57,060 --> 00:06:02,370
To make this template a little more unique than the rest, I'm going to add some E.M. tags right after

68
00:06:02,370 --> 00:06:05,370
the title with a class of text Dash Dange.

69
00:06:10,500 --> 00:06:12,690
The text inside can be anything you want.

70
00:06:13,050 --> 00:06:18,660
I'm just going to put something like important if we did everything, but we should be able to see this

71
00:06:18,660 --> 00:06:20,750
text appear and read on our template.

72
00:06:21,270 --> 00:06:26,450
If you go back to the admin dashboard, then you should be able to click the view category button.

73
00:06:27,210 --> 00:06:30,720
As expected, we now have the important text appearing.

74
00:06:31,140 --> 00:06:33,570
Of course, you don't have to use the ID.

75
00:06:33,960 --> 00:06:35,270
Let's try using the slug.

76
00:06:35,280 --> 00:06:41,760
Now, if you go back to that admin category page, you should see the field for the slug rather than

77
00:06:41,760 --> 00:06:42,720
using the ID.

78
00:06:42,750 --> 00:06:44,210
We can use the slug itself.

79
00:06:44,820 --> 00:06:50,460
I'm going to copy this log and then I'm going to rename the category file we just created using the

80
00:06:50,470 --> 00:06:50,880
slug.

81
00:06:57,590 --> 00:07:00,990
After doing this, we should get the same result as before.

82
00:07:01,370 --> 00:07:06,350
I'm going to refresh my page and we should still see the text important up here.

83
00:07:06,830 --> 00:07:07,470
This is great.

84
00:07:07,880 --> 00:07:14,090
Now we know how to customize and create specific templates for categories and some scenarios.

85
00:07:14,090 --> 00:07:19,050
Creating a template can be a bit excessive if you only want to apply some success changes.

86
00:07:19,550 --> 00:07:23,210
Luckily, WordPress will generate classes for you to use.

87
00:07:23,570 --> 00:07:28,670
If you inspect the element and search for the body tag, then you should see the category followed by

88
00:07:28,670 --> 00:07:29,240
the ID.

89
00:07:29,960 --> 00:07:36,260
If you can recall, the body class function generates this for you so you can use it for applying access

90
00:07:36,260 --> 00:07:37,240
to certain pages.

91
00:07:37,640 --> 00:07:41,290
It's always good practice to take advantage of these classes when possible.

92
00:07:41,750 --> 00:07:46,130
I'm going to open the custom docs file and apply some success.

93
00:07:48,010 --> 00:07:51,540
All I'm doing here is changing the page title color to yellow.

94
00:07:51,760 --> 00:07:55,840
If I refresh the page, then you should see the text changed to yellow.

95
00:07:55,840 --> 00:07:58,440
As I said it in the custom docs file.

96
00:07:58,900 --> 00:08:01,830
This looks horrendous, but it does get my point across.

97
00:08:02,380 --> 00:08:08,200
Before I wrap up this lecture, you may be wondering why bother creating the category template when

98
00:08:08,200 --> 00:08:10,150
the index template is almost the same?

99
00:08:10,870 --> 00:08:13,480
This is because your theme should be flexible.

100
00:08:13,750 --> 00:08:19,090
By having separate templates, you make it easy to apply changes to specific types of content.

101
00:08:19,630 --> 00:08:22,490
Having a file bloated with code is hard to maintain.

102
00:08:22,930 --> 00:08:27,100
I want you to make it a habit to create templates for all types of pages.

103
00:08:27,100 --> 00:08:28,960
As this allows for more flexibility.

104
00:08:29,710 --> 00:08:35,020
The index template should be loaded only when any other template is not suitable for the job.

105
00:08:35,500 --> 00:08:41,409
I'm not saying the index template is bad, but if you rely on more than half of your pages to use the

106
00:08:41,409 --> 00:08:45,640
index template, you'll just make it harder to customize in the future when you need to.

