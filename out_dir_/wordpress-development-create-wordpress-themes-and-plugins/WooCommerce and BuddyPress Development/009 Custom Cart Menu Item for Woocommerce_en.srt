1
00:00:07,430 --> 00:00:12,980
The very last thing that needs to be done is making this card button dynamic for a very long time.

2
00:00:12,980 --> 00:00:14,090
We've left it alone.

3
00:00:14,120 --> 00:00:15,680
And it's kind of been bugging me.

4
00:00:16,010 --> 00:00:18,170
We will finally make this function correctly.

5
00:00:18,860 --> 00:00:21,800
Let's open the header template and look for the card button.

6
00:00:24,190 --> 00:00:26,590
The very first thing we want to do is your place.

7
00:00:26,620 --> 00:00:32,920
This static text that displays the number of items in the cart replace this text and echo out the following

8
00:00:33,260 --> 00:00:36,400
WC cart, get cart contents count.

9
00:00:42,520 --> 00:00:44,140
Let's go through this one by one.

10
00:00:44,470 --> 00:00:49,600
First, we call the WC function, which will return the current wew commerce instance.

11
00:00:49,860 --> 00:00:54,700
In the resource section of this lecture, I provide a link to the Commerce API docs.

12
00:00:55,060 --> 00:00:59,520
This part of the documentation provides information about the code inside commerce.

13
00:00:59,980 --> 00:01:03,820
Here, you'll learn more about the classes and the functions provided by commerce.

14
00:01:04,390 --> 00:01:07,540
The sidebar provides a link to the DWC function.

15
00:01:07,840 --> 00:01:10,180
Here is what Will Commerce says about this function.

16
00:01:10,500 --> 00:01:14,800
Return is the main instance of W.S. to prevent the need to use Global's.

17
00:01:15,100 --> 00:01:20,860
If you look below, you'll see in the return value section we can check out the world commerce class.

18
00:01:21,160 --> 00:01:22,000
Let's click on it.

19
00:01:22,330 --> 00:01:25,120
You'll find a list of methods and properties you can use.

20
00:01:25,420 --> 00:01:27,940
One of these properties is the cart property.

21
00:01:30,250 --> 00:01:32,530
If you click it, you'll find out by default.

22
00:01:32,590 --> 00:01:36,220
It's no, however, will commerce will set this up for you.

23
00:01:36,240 --> 00:01:37,570
So it usually won't be.

24
00:01:37,570 --> 00:01:37,950
No.

25
00:01:38,380 --> 00:01:43,460
If you look at the comment above, you'll notice that while commerce tells you it's an instance of the

26
00:01:43,470 --> 00:01:48,490
W.S. car class, looking at the sidebar, you'll find a link to the class.

27
00:01:51,370 --> 00:01:56,770
Here you'll find all the methods and properties you can use since it's already set up for you.

28
00:01:56,950 --> 00:02:00,940
Then you can just call these methods and properties and use them any way you like.

29
00:02:01,300 --> 00:02:06,580
One of these methods is the get cart contents count, which gets the number of items in the cart.

30
00:02:07,090 --> 00:02:10,060
Looking back at our code, all we did was chain this together.

31
00:02:10,810 --> 00:02:14,830
There's a lot that goes on to make this cart work, but I want to save some time.

32
00:02:15,130 --> 00:02:19,120
Go to the WEW Commerce Templates folder and look for the cart folder.

33
00:02:19,450 --> 00:02:21,580
Open the cart duppy HP template.

34
00:02:24,000 --> 00:02:29,760
This template contains the code for displaying all the items in the card, along with the total inside,

35
00:02:29,760 --> 00:02:32,310
you'll find a loop that starts at around line 40.

36
00:02:32,370 --> 00:02:34,340
That goes through all the items in the cart.

37
00:02:34,950 --> 00:02:38,340
I'm going to copy this loop and paste it inside the header file.

38
00:02:38,760 --> 00:02:43,200
It should be pasted inside the div tag with the class top card items.

39
00:02:50,370 --> 00:02:55,320
Then I'm going to copy one of these cart items and paste it right before the table row like so.

40
00:03:01,100 --> 00:03:04,700
I'm going to delete the other card items since we don't need them anymore.

41
00:03:11,040 --> 00:03:16,900
What we'll be doing is copying and pasting the data from the table row hgl into our templates, formatted

42
00:03:17,010 --> 00:03:19,120
HGL before we can do that.

43
00:03:19,300 --> 00:03:20,410
Let's review the code.

44
00:03:20,440 --> 00:03:22,990
Inside this loop and understand how it works.

45
00:03:23,500 --> 00:03:25,870
The very first thing is the loop itself.

46
00:03:26,200 --> 00:03:27,700
Just like we did previously.

47
00:03:27,880 --> 00:03:33,340
We're grabbing the current card instance and calling the get cart method, which will return an array

48
00:03:33,370 --> 00:03:35,320
of items currently in the user's cart.

49
00:03:35,830 --> 00:03:39,370
Then it gets assigned to a key and value respectively.

50
00:03:40,120 --> 00:03:43,900
This loop is essentially looping through all the items in the user's cart.

51
00:03:44,380 --> 00:03:49,930
Next, the underscore product variable is defined, which will contain information about the current

52
00:03:49,930 --> 00:03:50,950
product in the loop.

53
00:03:51,400 --> 00:03:55,630
Afterwards, we grab the product I.D. just in case we need it later.

54
00:03:56,320 --> 00:03:59,890
Next up is the conditional statement, which will check for four things.

55
00:04:00,220 --> 00:04:03,070
First is to check if a product is even returned.

56
00:04:03,430 --> 00:04:06,640
We don't want to loop through a product that is broken or incomplete.

57
00:04:07,480 --> 00:04:10,480
Second is to check if the product actually exists.

58
00:04:10,810 --> 00:04:13,870
Third is to check if there's even a quantity for the item.

59
00:04:14,320 --> 00:04:20,050
Lastly, we're checking if the current item should even be visible, if all the conditional checks pass.

60
00:04:20,230 --> 00:04:24,940
Then we can begin displaying the card item before we start moving everything.

61
00:04:25,120 --> 00:04:30,340
I'm going to remove the last two cells, which are the remove and total subtotal cells.

62
00:04:41,560 --> 00:04:43,600
I'm also going to remove the first cell.

63
00:04:43,930 --> 00:04:45,160
We won't be needing these.

64
00:04:45,370 --> 00:04:47,200
Now we can begin moving everything.

65
00:04:47,590 --> 00:04:51,580
The very first thing I want to move is the P p code for the thumbnail.

66
00:04:51,940 --> 00:04:55,900
You can find it inside the T d tag with the class product thumbnail.

67
00:04:56,320 --> 00:05:01,810
We're going to copy all this code over to the div tag with the class top card item image.

68
00:05:07,970 --> 00:05:10,940
All this does is grab the thumb now by using the filter.

69
00:05:10,970 --> 00:05:11,250
Woo!

70
00:05:11,300 --> 00:05:12,120
Commerce card.

71
00:05:12,230 --> 00:05:12,530
Item.

72
00:05:12,530 --> 00:05:12,980
Thumbnail.

73
00:05:13,490 --> 00:05:15,800
Then it'll check if there's a permalink.

74
00:05:16,070 --> 00:05:18,920
If there isn't, it'll output the thumbnail itself.

75
00:05:19,220 --> 00:05:22,370
Otherwise, it'll output the thumbnail surrounded by a link.

76
00:05:22,820 --> 00:05:26,990
I'm going to remove this cell that had the thumbnail since we have the code pasted over.

77
00:05:29,710 --> 00:05:31,960
Next, I'm going to copy over the P.

78
00:05:32,230 --> 00:05:37,160
Code for the name and pasted over the static text for the name, you can find it in the T.

79
00:05:37,170 --> 00:05:39,730
D tag with the class product name.

80
00:05:48,120 --> 00:05:50,820
This bit of code is doing more than just adding the name.

81
00:05:51,180 --> 00:05:54,060
It's also grabbing some extra metadata and outputting it.

82
00:05:54,360 --> 00:05:56,420
However, our card is very simple.

83
00:05:56,430 --> 00:06:00,540
So I'm going to get rid of this metadata and back order notification code.

84
00:06:02,960 --> 00:06:07,320
It will just leave us with this simple conditional statement, just like before.

85
00:06:07,500 --> 00:06:09,450
Remove the cell with the product name.

86
00:06:12,290 --> 00:06:15,320
The last thing we need to do is grab the product price.

87
00:06:15,500 --> 00:06:16,760
It's the same as before.

88
00:06:17,120 --> 00:06:19,660
Grab the page peacoat relevant to the price.

89
00:06:25,040 --> 00:06:29,690
The last piece is this quantity code, but we will not be using this bit of code.

90
00:06:30,020 --> 00:06:35,450
The reason being is because this bit of code will actually output some input tags, which we don't need.

91
00:06:35,990 --> 00:06:38,480
All we want is the quantity number itself.

92
00:06:38,780 --> 00:06:44,720
Luckily, each cart item in the array has a key called quantity, which we can output like so.

93
00:06:51,810 --> 00:06:53,440
We're almost finished with the car.

94
00:06:53,730 --> 00:06:55,740
We have to replace the total next.

95
00:06:56,040 --> 00:07:01,590
The cart object has a method called get cart total, which will output the total in the cart with the

96
00:07:01,590 --> 00:07:02,220
currency.

97
00:07:02,670 --> 00:07:08,700
It should use the currency you set in the commerce settings inside the span's tag with the class top

98
00:07:08,700 --> 00:07:09,710
checkout price.

99
00:07:09,870 --> 00:07:11,820
Replace the static text with the method.

100
00:07:16,320 --> 00:07:18,600
Lastly, we have to make this link work.

101
00:07:18,840 --> 00:07:19,740
Update the H.

102
00:07:19,740 --> 00:07:22,950
Ref attribute and call the function W.S. get cart.

103
00:07:22,980 --> 00:07:23,580
You are L.

104
00:07:28,160 --> 00:07:32,720
This is a function that will return the doorbell to the cart page just like that.

105
00:07:32,840 --> 00:07:33,920
We finished the cart.

106
00:07:34,280 --> 00:07:39,410
Make sure to remove this table row bit of code we pasted in earlier as we no longer need it.

107
00:07:42,090 --> 00:07:45,050
Let's refresh the page and check to see if everything worked.

108
00:07:45,390 --> 00:07:49,680
After confirming that everything is working, we can now move onto the next lecture.

109
00:07:49,950 --> 00:07:50,640
See you there.

