WEBVTT

00:07.740 --> 00:13.500
I'm back inside the admin side of WordPress and I'm on the recipe page right now, there's no way for

00:13.500 --> 00:18.300
me to know how many ratings each recipe has or what the rating for each one is.

00:18.750 --> 00:22.500
Wouldn't it be nice if I could see all the data here in this table?

00:22.860 --> 00:23.610
At this point?

00:23.710 --> 00:25.680
You can already guess how we would do this.

00:25.800 --> 00:31.410
If you were thinking action hoax, then you were correct along with showing the rating count and the

00:31.410 --> 00:32.300
actual rating.

00:32.340 --> 00:38.580
We're also going to remove the tags column as it's kind of useless information for this post to get

00:38.580 --> 00:39.130
started.

00:39.180 --> 00:45.090
We're going to look into when the WordPress admin dashboard is initialized inside the main plug and

00:45.090 --> 00:48.150
file at an action hook called admin in.

00:48.150 --> 00:52.200
It's the name of the function will be recipe admin in it.

00:54.590 --> 01:00.830
This function doesn't exist, so let's create it inside the includes folder, create a folder named

01:00.830 --> 01:01.400
admin.

01:01.700 --> 01:05.990
This is where we'll store files related to the admin site exclusively.

01:06.380 --> 01:13.100
Then inside this folder, create a file named in it to find the function and include it from the main

01:13.100 --> 01:13.790
plug and file.

01:21.400 --> 01:27.820
Inside this function, I'm going to add a new filter hook called managed post type posts columns.

01:33.110 --> 01:37.140
This hook doesn't have to be used inside the admin in it hook.

01:37.490 --> 01:40.620
The reason we're adding it here is to keep things organized.

01:40.850 --> 01:46.160
I could have very well put this hook inside the main plug and file, but I don't want that file to be

01:46.160 --> 01:47.450
too cluttered with hooks.

01:48.200 --> 01:53.750
There's also the advantage of having all the admin hooks in one file rather than mixing them together

01:53.750 --> 01:54.620
with other hooks.

01:54.980 --> 01:58.970
I provide a link to this and the resource section to more about this hook.

01:59.390 --> 02:01.490
Let's take a look at the Codex page.

02:01.790 --> 02:07.850
The Post type in the name can actually be replaced with the name of the post type where the column will

02:07.850 --> 02:08.530
be updated.

02:09.020 --> 02:14.750
So let's go back to the filter hook and replace this word with recipe, since that is the name of our

02:14.750 --> 02:15.310
post type.

02:17.570 --> 02:23.690
This filter hook will give us an array of columns already set by WordPress, we have the option of returning

02:23.690 --> 02:27.660
a modified version of this array or a brand new array of columns.

02:28.160 --> 02:32.810
Let's set this filter Hooke's function to our add new recipe columns.

02:34.980 --> 02:41.980
I'm going to create a file called columns with the admin folder and define the function here.

02:42.510 --> 02:45.510
Make sure to include it from the admin init function.

02:51.810 --> 02:57.750
This function will be passed a column zarei, we're not going to use this, though, instead I'm going

02:57.750 --> 03:00.180
to create an array called new columns.

03:02.470 --> 03:07.690
The key of these arrays will be used to identify each column and the values will be the names of each

03:07.690 --> 03:08.090
column.

03:08.530 --> 03:11.820
This will be outputted into the header and footer of our table.

03:12.490 --> 03:17.020
If we take a look at the Codex page, WordPress provides a list of default columns.

03:17.020 --> 03:21.640
We can say, I'm going to use all of these except the tags and comments column.

03:23.750 --> 03:25.860
You should have something similar to what I have.

03:26.180 --> 03:33.290
You'll also notice that I'm making each column name translatable right after the categories column and

03:33.290 --> 03:35.600
two more columns called Count and Rating.

03:35.990 --> 03:39.310
When it comes to custom columns, you can name these whatever you want.

03:39.530 --> 03:40.880
I'm going to keep it simple.

03:41.150 --> 03:43.870
These column names will also be translatable.

03:44.540 --> 03:47.150
The last step is return the new columns.

03:47.330 --> 03:53.540
Since these are custom columns, it is our responsibility to output the data for each column back inside

03:53.540 --> 03:55.160
the admin init function.

03:55.250 --> 04:00.530
We will now add an action hook called Managed Post Type Post Custom Column.

04:08.100 --> 04:14.040
I provided a link and the resources section for this action hook, this hook will allow us to output

04:14.040 --> 04:15.390
info for each column.

04:15.840 --> 04:20.070
The post type keyword should be replaced with a custom post type.

04:20.070 --> 04:21.120
This hook will affect.

04:21.390 --> 04:23.390
In our case, it would be recipe.

04:23.850 --> 04:27.540
The function we want to call is our managed recipe columns.

04:33.470 --> 04:36.810
This hook will pass our function to arguments that we'll need.

04:37.190 --> 04:44.000
I'm going to set the priority to 10 and the accepted arguments to two, I'm going to define this function

04:44.000 --> 04:46.340
inside the columns page file.

04:48.530 --> 04:56.210
The two variables that will be passed in our column and posted the column variable is equal to the key

04:56.210 --> 05:00.080
in the columns array and the ID is the idea of the current post.

05:00.660 --> 05:03.050
I'm going to use a switch statement here.

05:03.360 --> 05:08.720
I'm going to check the column and see if its value is equal to either count orating.

05:16.990 --> 05:19.820
Otherwise, I'm just going to break the statement.

05:20.230 --> 05:25.330
Don't worry about the other columns, since they are WordPress columns, WordPress will handle setting

05:25.330 --> 05:26.050
those values.

05:26.710 --> 05:30.860
It's our custom columns we need to worry about for both of these columns.

05:30.880 --> 05:36.310
I'm going to grab the recipe metadata and simply echo the corresponding values for each column.

05:49.410 --> 05:54.900
Something I want to highlight is that I'm checking if the key in the array is set for each of the respective

05:54.900 --> 05:55.410
columns.

05:55.860 --> 05:58.770
This is just in case the metadata isn't available.

05:59.400 --> 06:02.390
Refresher table and you should now see our columns appear.

06:02.700 --> 06:07.980
We only have one recipe, but we can already see the amount of ratings it's received and the average

06:07.980 --> 06:08.370
rating.
